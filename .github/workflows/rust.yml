name: Build and Release Rust Binary

on:
  push:
    branches:
      - main

jobs:
  build:
    # Define BINARY_NAME as an environment variable
    env:
      BINARY_NAME: nuxi-cached

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-gnu

      - name: Get current version
        id: get_version
        run: |
          VERSION=$(grep 'version = ' Cargo.toml | sed 's/version = "\(.*\)"/\1/')
          echo "Current version: $VERSION"

      - name: Bump version based on tag
        id: bump_version
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: |
          NEW_VERSION=$(echo $VERSION | sed 's/[^0-9.]*\([0-9]+\)\.\([0-9]+\)\.\([0-9]+\)$/\1.(\2+1).0/')
          echo "New version for tag: $NEW_VERSION"

      - name: Bump version on commit message
        id: bump_version_commit
        if: ${{ ! startsWith(github.ref, 'refs/tags/') }}
        run: |
          if grep -q 'bump minor' <<< "$GITHUB_EVENT_BODY"; then
            NEW_VERSION=$(echo $VERSION | sed 's/[^0-9.]*\([0-9]+\)\.\([0-9]+\)\.\([0-9]+\)$/\1.(\2+1).0/')
          elif grep -q 'bump major' <<< "$GITHUB_EVENT_BODY"; then
            NEW_VERSION=$(echo $VERSION | sed 's/[^0-9.]*\([0-9]+\)\.\([0-9]+\)\.\([0-9]+\)$/\1.0.(\2+1)/')
          else
            NEW_VERSION=$VERSION
          fi
          echo "New version based on commit message: $NEW_VERSION"

      - name: Update Cargo.toml
        run: |
          sed -i "s/version = '$VERSION'/version = '$NEW_VERSION'/" Cargo.toml

      - name: Commit changes
        run: |
          git config user.name 'GitHub Actions'
          git config user.email 'github-actions@github.com'
          git add Cargo.toml
          git commit -m "Bump version to $NEW_VERSION"

      - name: Build the binary
        run: cargo build --release

      - name: Create archive
        run: |
          tar -czvf "${BINARY_NAME}-${TARGET}.tar.gz" target/release/"${BINARY_NAME}"

      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.sha }}
          release_name: ${{ github.sha }}
          draft: false
          prerelease: false

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: release-artifacts
          path: "${BINARY_NAME}-${TARGET}.tar.gz"

      - name: Upload artifact to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.repos.url }}/releases/${{ github.sha }}/assets
          asset_path: artifacts/release-artifacts/${{ github.sha }}/${BINARY_NAME}-${TARGET}.tar.gz
          asset_name: ${{ BINARY_NAME }}-${{ TARGET }}.tar.gz
          asset_content_type: application/gzip

name: CLI build

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build The CLI
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: nuxi-cached
          path: target/release/nuxi-cached # The binary path

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: nuxi-cached

      # Extract branch or tag name
      - name: Get the version
        id: get_version
        run: echo "##[set-output name=version;]$(echo ${GITHUB_REF#refs/*/})"
        env:
          GITHUB_REF: ${{ github.ref }}

      # Create a new tag (optional, only if you want to create a new tag)
      - name: Create Tag
        run: git tag ${{ steps.get_version.outputs.version }}
        # You might want to push the tag or use a more complex versioning scheme

      # ... download artifact step ...

      # Create Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: Release ${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./nuxi-cached
          asset_name: nuxi-cached
          asset_content_type: application/octet-stream
